{"version":3,"sources":["components/Newproduct/Newproduct.js","components/auth/Login.js","redux/reducers/productReducer.js","redux/store.js","index.js"],"names":["Newproduct","props","saveProduct","event","setState","target","id","value","addNewProduct","state","name","type","description","date","price","preventDefault","alert","axios","post","_created","Date","headers","localStorage","getItem","then","res","console","log","catch","err","Fragment","class","for","onChange","this","onClick","React","Component","connect","Login","saveInputValue","redirectToMain","isAuthenticated","to","logIn","email","password","setItem","data","jwt","first_name","last_name","href","initState","products","singleReducer","combineReducers","productReducer","action","payload","newProducts","filter","product","_id","store","createStore","applyMiddleware","logger","getState","app","document","getElementById","ReactDOM","render","exact","path","component"],"mappings":"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","file":"static/js/main.850bc6d6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nimport {} from '../../redux/actions/productAction'\r\n// import store from '../../redux/store'\r\n// import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\n\r\nclass Newproduct extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name:'',\r\n            type:'',\r\n            description:'',\r\n            date:'',\r\n            price:''\r\n        }\r\n\r\n    }\r\n\r\n\r\nsaveProduct = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value })\r\n}\r\n\r\naddNewProduct = (event) => {\r\nif(this.state.name === \"\" || \r\n   this.state.type === \"\" || \r\n   this.state.description === \"\" ||\r\n   this.state.date === \"\" || \r\n   this.state.price === \"\" ){\r\n       event.preventDefault()\r\n       alert(\"Please fill in the required fields:\")\r\n   }else if (this.state.name !== \"\" || \r\n   this.state.type !== \"\" || \r\n   this.state.description !== \"\" ||\r\n   this.state.date !== \"\" || \r\n   this.state.price !== \"\"){\r\n  axios.post('https://hidden-everglades-59214.herokuapp.com/api/v1/products/', {\r\n    name: this.state.name,\r\n  type: this.state.type,\r\n  description: this.state.description,\r\n  date: this.state.date,\r\n  price: this.state.price,\r\n  _created: new Date()},\r\n  \r\n  { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('jwt')}`}})\r\n  .then(res => {\r\n      console.log(res)\r\n  })\r\n .catch(err => {\r\n     console.log(err)\r\n })\r\n    \r\n   }\r\n   \r\n}\r\n\r\nrender(){\r\n    return(\r\n        <React.Fragment>\r\n             <div class=\"new-container\">\r\n        <div class=\"first-container\">\r\n        <div id=\"new-product\">\r\n\r\n<form>\r\n\r\n        <p class=\"input-container\"> \r\n            <label class=\"text-field-input\" for=\"name\">Product Name</label>\r\n            <input type=\"text\" name=\"name\" class=\"text-field\"  onChange={this.saveProduct}/>\r\n        </p>\r\n\r\n        <p class=\"input-container\"> \r\n                <label class=\"text-field-input\" for=\"description\">Product Description</label>\r\n                <input type=\"text\" name=\"description\" class=\"text-field\"  onChange={this.saveProduct}/>\r\n        </p>\r\n\r\n        <p class=\"input-container\"> \r\n            <label class=\"text-field-input\" for=\"type\">Product Type</label>\r\n            <input type=\"text\" name=\"type\" class=\"text-field\"  onChange={this.saveProduct}/>\r\n        </p>\r\n\r\n        <p class=\"input-container\"> \r\n            <label class=\"text-field-input\" for=\"date\">Purchase Date</label>\r\n            <input type=\"date\" name=\"date\" class=\"text-field\"  onChange={this.saveProduct}/>\r\n        </p>\r\n\r\n        <p class=\"input-container\">\r\n            <label class=\"text-field-input\" for=\"price\">Product Price</label>\r\n            <input type=\"text\" name=\"price\" class=\"text-field\"  onChange={this.saveProduct}/>\r\n        </p>\r\n\r\n\r\n        <button onClick={this.addNewProduct} class=\"primary-button\" type=\"submit\">CREATE PRODUCT</button>\r\n   \r\n        \r\n    </form>\r\n</div>\r\n\r\n        </div>\r\n    <div class=\"second-container\">\r\n    <div class=\"products-add\">\r\n    <i class=\"fas fa-plus-circle fa-3x\"></i>\r\n    <p>You are creating a new product</p>\r\n</div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n       \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Newproduct)","import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            isAuthenticated: false\r\n        }\r\n    }\r\n\r\n    saveInputValue = (event) => {\r\n        this.setState({[event.target.id]: event.target.value})\r\n    }\r\n\r\n    redirectToMain = () => {\r\n        if (this.state.isAuthenticated) {\r\n            return <Redirect to='/products' />\r\n        }\r\n    }\r\n\r\n        logIn = (event) => {\r\n            if(this.state.email === '' || this.state.password === ''){\r\n                event.preventDefault()\r\n                alert(\"Please fill in the required fields:\")\r\n            }else if(this.state.email !== '' || this.state.password !== ''){\r\n                event.preventDefault()\r\n                axios.post('https://hidden-everglades-59214.herokuapp.com/api/v1/auth/login', {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n                .then(res => {\r\n                    localStorage.setItem('jwt', res.data.jwt);\r\n                    localStorage.setItem('first_name', res.data.first_name);\r\n                    localStorage.setItem('last_name', res.data.last_name);\r\n                    this.setState({ isAuthenticated: true })\r\n                })\r\n                .catch(err =>{\r\n                    console.log(err)\r\n                })\r\n            }\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <React.Fragment>\r\n                    {this.redirectToMain()}\r\n\r\n                    <div id=\"login\">\r\n\r\n        <div class=\"box-container\">\r\n            \r\n            <form>\r\n\r\n                <p class=\"input-container\"> \r\n                    <label class=\"text-field-input\" for=\"email\">E-mail</label>\r\n                    <input onChange={this.saveInputValue} type=\"email\" name=\"email\" id=\"email\" class=\"text-field\"/>\r\n                </p>\r\n\r\n                <p class=\"input-container\"> \r\n                        <label class=\"text-field-input\" for=\"password\">Password</label>\r\n                        <input onChange={this.saveInputValue} type=\"password\" name=\"password\" id=\"password\" class=\"text-field\"/>\r\n                </p>\r\n\r\n                \r\n\r\n                <button class=\"primary-button\" type=\"submit\" onClick={this.logIn}>SIGN IN</button>\r\n           \r\n                \r\n            </form>\r\n            \r\n        </div>\r\n\r\n             <div class=\"aditional-info\">\r\n              <p>Or if you don't have an account.<a href=\"#\"> Register</a></p>\r\n             </div>\r\n\r\n    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n}\r\n\r\nexport default Login","const initState = {\r\n    products: [],\r\n}\r\n\r\nexport function productReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"GET_PRODUCTS\": {\r\n            return {\r\n                ...state, products: action.payload\r\n            }\r\n        }\r\n        case \"SAVE_PRODUCT\": {\r\n            return {\r\n                ...state, products: [...state.products, action.payload]\r\n            }\r\n        }\r\n        case \"DELETE_PRODUCT\": {\r\n            let newProducts = state.products.filter(product => {\r\n                return action.payload._id !== product._id\r\n            })\r\n            return { ...state, products: newProducts }\r\n        }\r\n      \r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport { productReducer } from './reducers/productReducer'\r\n\r\nconst singleReducer = combineReducers({\r\n    productReducer,\r\n})\r\n\r\n// Create an epmty store object\r\nconst store = createStore(\r\n    singleReducer,\r\n    applyMiddleware(logger)\r\n)\r\n\r\nconsole.log(store.getState())\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Newproduct from './components/Newproduct/Newproduct'\r\nimport Login from './components/auth/Login'\r\n\r\n\r\n\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\n\r\nconst app = document.getElementById('root')\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            \r\n            <Switch> \r\n                <Route exact path=\"/\" component={Login} />\r\n                <Route exact path='/newproduct' render={() => <Newproduct component={Newproduct}/>}/>      \r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Routes/>\r\n    </Provider>, app)\r\n"],"sourceRoot":""}